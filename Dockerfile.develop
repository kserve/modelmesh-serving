# syntax=docker/dockerfile:1.3

# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: for syntax, either use "experimental" or "1.3" (or later) to enable
# multi-arch build with mount option, see https://hub.docker.com/r/docker/dockerfile
# (https://github.com/moby/buildkit/releases/tag/dockerfile%2F1.3.0)

###############################################################################
# Create the develop, test, and build environment
###############################################################################

# TODO: replace the "go_toolset" build stage once ubi8/go-toolset:1.21 is available
# the go-toolset 1.21 is based on ubi9, we need to update it in the base image as well.
FROM registry.access.redhat.com/ubi8/ubi-minimal:latest as go-toolset

# https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
# We need TARGETOS and TARGETARCH (not BUILDOS and BUILDARCH) since the developer
# image should be built for the OS of the developer using it (this is not a "builder image")
ARG TARGETOS
ARG TARGETARCH

ARG GOLANG_VERSION=1.21.6

USER root

ENV HOME=/root \
    PATH=/usr/local/go/bin:$PATH:

WORKDIR /workspace

# install necessary tools that are included in the ubi/go-toolset image that we are temporarily replacing
RUN --mount=type=cache,target=/root/.cache/microdnf:rw \
    microdnf --setopt=cachedir=/root/.cache/microdnf --nodocs install \
       diffutils \
       gcc-c++ \
       make \
       wget \
       tar \
       git \
       which \
    && microdnf update --nodocs \
    && true

# install go
RUN true \
    && wget -qO go.tgz "https://golang.org/dl/go${GOLANG_VERSION}.${TARGETOS:-linux}-${TARGETARCH:-amd64}.tar.gz" \
    && tar -C /usr/local -xzf go.tgz \
    && go version \
    && rm go.tgz \
    && true


####################################################################################
# TODO: replace "go-toolset" build stage with ubi/go-toolset:1.21 once available   #
#       and swap `microdnf` commands for `dnf`                                     #
####################################################################################
FROM go-toolset

# https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
# don't provide "default" values (e.g. 'ARG TARGETARCH=amd64') for non-buildx environments,
# see https://github.com/docker/buildx/issues/510
ARG TARGETOS
ARG TARGETARCH

ARG OPENSHIFT_VERSION=4.12
ARG KUSTOMIZE_VERSION=4.5.2
ARG KUBEBUILDER_VERSION=v3.11.0
ARG CONTROLLER_GEN_VERSION=v0.11.4

ENV PATH=/usr/local/go/bin:$PATH:/usr/local/kubebuilder/bin:

USER root
ENV HOME=/root

WORKDIR /workspace

# Install build and dev tools
# NOTE: Require python38 to install pre-commit
RUN --mount=type=cache,target=/root/.cache/dnf:rw \
    microdnf install --setopt=cachedir=/root/.cache/dnf -y --nodocs \
       nodejs \
       jq \
       python38 \
    && ln -sf /usr/bin/python3 /usr/bin/python \
    && ln -sf /usr/bin/pip3 /usr/bin/pip \
    && true

# Install pre-commit
ENV PIP_CACHE_DIR=/root/.cache/pip
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install pre-commit

# First download and extract older dist of kubebuilder which includes required etcd, kube-apiserver and kubectl binaries
# Then download and overwrite kubebuilder binary with desired/latest version
RUN true \
    && curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_${TARGETOS:-linux}_${TARGETARCH:-amd64}.tar.gz | tar -xz -C /tmp/ \
    && mv /tmp/kubebuilder_*_${TARGETOS:-linux}_${TARGETARCH:-amd64} /usr/local/kubebuilder \
    && curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/${KUBEBUILDER_VERSION}/kubebuilder_${TARGETOS:-linux}_${TARGETARCH:-amd64} -o /usr/local/kubebuilder/bin/kubebuilder \
    && true

# Download openshift-cli
RUN true \
    && curl -sSLf --output /tmp/oc_client.tar.gz https://mirror.openshift.com/pub/openshift-v4/${TARGETARCH:-amd64}/clients/ocp/latest-${OPENSHIFT_VERSION}/openshift-client-${TARGETOS:-linux}.tar.gz \
    && tar -xvf /tmp/oc_client.tar.gz -C /tmp \
    && mv /tmp/oc /usr/local/bin \
    && mv /tmp/kubectl /usr/local/bin \
    && chmod a+x /usr/local/bin/oc /usr/local/bin/kubectl \
    && rm -f /tmp/oc_client.tar.gz \
    && true

# Download kustomize
RUN true \
    && curl -sSLf --output /tmp/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_${TARGETOS:-linux}_${TARGETARCH:-amd64}.tar.gz \
    && tar -xvf /tmp/kustomize.tar.gz -C /tmp \
    && mv /tmp/kustomize /usr/local/bin \
    && chmod a+x /usr/local/bin/kustomize \
    && rm -v /tmp/kustomize.tar.gz \
    && true

# Copy the Go Modules manifests
COPY .pre-commit-config.yaml go.mod go.sum ./

# Download and initialize the pre-commit environments before copying the source so they will be cached
RUN true\
    && git init \
    && pre-commit install-hooks \
    && rm -rf .git \
    && true

# Cache dependencies before copying and building sources so that source changes
# won't invalidate earlier download layers
RUN go mod download

# Export the Go binary path for controller-gen and ginkgo CLIs
ENV PATH $HOME/go/bin:$PATH

# Install controller-gen to generate util code and Kubernetes YAMLs for API changes
RUN true \
    && go install sigs.k8s.io/controller-tools/cmd/controller-gen@${CONTROLLER_GEN_VERSION} \
    && controller-gen --version \
    && true

# Install the Ginkgo test framework
RUN true \
    && go install github.com/onsi/ginkgo/v2/ginkgo \
    && ginkgo version \
    && true

# Use setup-envtest for kubebuilder to use K8s version 1.23+ for autoscaling/v2 (HPA)
RUN true \
    && go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest \
    && setup-envtest use 1.26 \
    && true

# For GitHub Action 'lint', work around error "detected dubious ownership in repository at '/workspace'"
RUN git config --system --add safe.directory /workspace

# The ubi/go-toolset image doesn't define ENTRYPOINT or CMD, but we need it to run 'make develop'
CMD /bin/bash
